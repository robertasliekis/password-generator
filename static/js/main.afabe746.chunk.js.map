{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","lowerCaseChecked","setLowerCaseChecked","upperCaseChecked","setUpperCaseChecked","specialSymbolsChecked","setSpecialSymbolsChecked","numbersChecked","setNumberChecked","generatedPassword","setGeneratedPassword","generateRandomPassword","lowerCaseLetters","upperCaseLetters","toUpperCase","randomPassword","checkedFields","push","getCheckedFields","length","i","randomCheckedField","Math","floor","random","charAt","useEffect","className","icon","faUnlockAlt","href","onClick","navigator","clipboard","writeText","faCheck","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afabe746.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck, faUnlockAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction App() {\n  const [lowerCaseChecked, setLowerCaseChecked] = useState(true);\n  const [upperCaseChecked, setUpperCaseChecked] = useState(false);\n  const [specialSymbolsChecked, setSpecialSymbolsChecked] = useState(false);\n  const [numbersChecked, setNumberChecked] = useState(false);\n  const [generatedPassword, setGeneratedPassword] = useState(\"\");\n\n  const generateRandomPassword = () => {\n    const lowerCaseLetters = \"abcdefghijklmnopqrstuvwxyz\";\n    const upperCaseLetters = lowerCaseLetters.toUpperCase();\n    const numbers = \"0123456789\";\n    const specialSymbols = `[&/#,+-()$~%.'\":*?<>{}]`;\n\n    const getCheckedFields = () => {\n      let checkedFields = [];\n      if (lowerCaseChecked) {\n        checkedFields.push(lowerCaseLetters);\n      }\n      if (upperCaseChecked) {\n        checkedFields.push(upperCaseLetters);\n      }\n      if (specialSymbolsChecked) {\n        checkedFields.push(specialSymbols);\n      }\n      if (numbersChecked) {\n        checkedFields.push(numbers);\n      }\n      return checkedFields;\n    };\n\n    let randomPassword = \"\";\n    let checkedFields = getCheckedFields();\n    if (checkedFields.length > 0) {\n      for (let i = 0; i < 20; i++) {\n        let randomCheckedField = Math.floor(Math.random() * checkedFields.length);\n        randomPassword += checkedFields[randomCheckedField].charAt(Math.floor(Math.random() * checkedFields[randomCheckedField].length));\n      }\n    }\n    setGeneratedPassword(randomPassword);\n  };\n\n  useEffect(generateRandomPassword, [lowerCaseChecked, upperCaseChecked, specialSymbolsChecked, numbersChecked]);\n\n  return (\n    <div className=\"website-wrapper\">\n      <div className=\"header\">\n        <div className=\"container\">\n          <div className=\"logo\">\n            <FontAwesomeIcon icon={faUnlockAlt} className=\"icon\" />\n            Password generator\n          </div>\n        </div>\n      </div>\n      <div className=\"content\">\n        <div className=\"learn-more-container\">\n          Our readers help us create quality content. If you purchase via links on our site, we may receive affiliate commissions.\n          <a href=\"www.google.lt\">Learn more</a>\n        </div>\n        <div className=\"password-generator-container\">\n          <h1>Generate strong passwords</h1>\n          <p>Upgrade the security of your online accounts. </p>\n          <p>Create strong passwords that are completely random and impossible to guess.</p>\n          <div className=\"output-container\">\n            <div className=\"output\">\n              {generatedPassword}\n              <div className=\"btn btn-generate\" onClick={() => generateRandomPassword()}></div>\n            </div>\n            <div className=\"btn btn-copy\" onClick={() => navigator.clipboard.writeText(generatedPassword)}>\n              Copy Password\n            </div>\n          </div>\n          <div className=\"options-container\">\n            <div className=\"checkbox-container\" onClick={() => setLowerCaseChecked(!lowerCaseChecked)}>\n              <div className=\"checkbox-field\">{lowerCaseChecked ? <FontAwesomeIcon icon={faCheck} className=\"icon\" /> : null}</div>\n              <p>lower case</p>\n            </div>\n            <div className=\"checkbox-container\" onClick={() => setUpperCaseChecked(!upperCaseChecked)}>\n              <div className=\"checkbox-field\">{upperCaseChecked ? <FontAwesomeIcon icon={faCheck} className=\"icon\" /> : null}</div>\n              <p>upper case</p>\n            </div>\n\n            <div className=\"checkbox-container\" onClick={() => setSpecialSymbolsChecked(!specialSymbolsChecked)}>\n              <div className=\"checkbox-field\">{specialSymbolsChecked ? <FontAwesomeIcon icon={faCheck} className=\"icon\" /> : null}</div>\n              <p>special symbols</p>\n            </div>\n            <div className=\"checkbox-container\" onClick={() => setNumberChecked(!numbersChecked)}>\n              <div className=\"checkbox-field\">{numbersChecked ? <FontAwesomeIcon icon={faCheck} className=\"icon\" /> : null}</div>\n              <p>numbers</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"info-container about-container\">\n          <div className=\"image\"></div>\n          <div className=\"text-block\">\n            <h2>What is a password generator?</h2>\n            <p>\n              A password generator is a tool that automatically generates strong, secure passwords. With its help, you don’t need to come up\n              with your own passwords ever again.\n            </p>\n            <p>\n              A single mouse click will generate you a sequence of random symbols. Copy and use it as a password for your device, email,\n              social media account, or anything else that requires restricted access.\n            </p>\n            <p>\n              Also, don’t use the same password for more than one account. Each time you need to sign up, create a new password using this\n              free password generator. In this way, your data will be safer than ever before.\n            </p>\n          </div>\n        </div>\n        <div className=\"info-container how-it-works-container\">\n          <div className=\"text-block\">\n            <h2>How does our password generator tool work?</h2>\n            <p>\n              To create a truly unique character combination, this online password generator tool goes through random sequences of 26\n              uppercase letters, 26 lowercase letters, 10 numeric digits, and 32 special symbols. The result is a unique\n              <span>12-character</span>\n              sequence. This number of characters makes your future password downright unbreakable taking 1.4 billion years for a\n              brute-force attack to crack it.\n            </p>\n            <p>\n              This free password generator is compatible with Windows, Linux, and Mac operating systems, as well as with Android and iOS\n              devices.\n            </p>\n          </div>\n          <div className=\"image\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n//\"homepage\": \"http://https://robertasliekis.github.io/password-generator/\",\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}